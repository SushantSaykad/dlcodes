// Non recursive 

#include <iostream>

int fibonacciNonRecursive(int n) {
    if (n <= 1)
        return n;

    int prev = 0;
    int current = 1;

    for (int i = 2; i <= n; i++) {
        int next = prev + current;
        prev = current;
        current = next;
    }

    return current;
}

int main() {
    int n = 10;  // Change this value to calculate different Fibonacci numbers

    int result = fibonacciNonRecursive(n);
    std::cout << "Fibonacci number at position " << n << " is: " << result << std::endl;

    return 0;
}


//Recursive

#include <iostream>

int fibonacciRecursive(int n) {
    if (n <= 1)
        return n;

    return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
}

int main() {
    int n = 10;  // Change this value to calculate different Fibonacci numbers

    int result = fibonacciRecursive(n);
    std::cout << "Fibonacci number at position " << n << " is: " << result << std::endl;

    return 0;
}

